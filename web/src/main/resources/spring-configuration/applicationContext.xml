<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:aop="http://www.springframework.org/schema/aop" xmlns:context="http://www.springframework.org/schema/context"
       xmlns:jdbc="http://www.springframework.org/schema/jdbc" xmlns:tx="http://www.springframework.org/schema/tx"
       xmlns:jpa="http://www.springframework.org/schema/data/jpa"
       xsi:schemaLocation="
		http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.2.xsd
		http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-3.2.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-3.2.xsd
		http://www.springframework.org/schema/jdbc http://www.springframework.org/schema/jdbc/spring-jdbc-3.2.xsd
		http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-3.2.xsd
		http://www.springframework.org/schema/data/jpa http://www.springframework.org/schema/data/jpa/spring-jpa-1.2.xsd"
       default-lazy-init="true">

    <description>Spring公共配置</description>

    <!-- 使用annotation 自动注册bean,并检查@Required,@Autowired的属性已被注入 -->
    <context:component-scan base-package="org.fightteam.avalon">
        <context:exclude-filter type="annotation" expression="org.springframework.stereotype.Controller"/>
        <context:exclude-filter type="annotation" expression="org.springframework.web.bind.annotation.ControllerAdvice"/>
    </context:component-scan>

    <!-- Jpa Entity Manager 配置 -->
    <bean id="entityManagerFactory" class="org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean">
        <property name="dataSource" ref="dataSource"/>
        <property name="jpaVendorAdapter" ref="hibernateJpaVendorAdapter"/>
        <property name="packagesToScan" value="org.fightteam.avalon"/>
        <!--<property name="jpaProperties">-->
            <!--<props>-->
                <!--<prop key="hibernate.cache.region.factory_class">org.hibernate.cache.ehcache.EhCacheRegionFactory</prop>-->
                <!--<prop key="net.sf.ehcache.configurationResourceName">cache/ehcache-hibernate-local.xml</prop>-->
                <!--<prop key="hibernate.ejb.naming_strategy">org.hibernate.cfg.ImprovedNamingStrategy</prop>-->
            <!--</props>-->
        <!--</property>-->

    </bean>

    <bean id="hibernateJpaVendorAdapter" class="org.springframework.orm.jpa.vendor.HibernateJpaVendorAdapter">
        <property name="databasePlatform">
            <bean factory-method="getDialect" class="org.fightteam.avalon.tools.persistence.Hibernates">
                <constructor-arg ref="dataSource"/>
            </bean>
        </property>
        <!-- 自动创建表 -->
        <property name="generateDdl" value="true"/>
    </bean>

    <!-- Spring Data Jpa配置, 扫描base-package下所有继承于Repository<T,ID>的接口 -->
    <jpa:repositories base-package="org.fightteam.avalon" transaction-manager-ref="transactionManager"
                      entity-manager-factory-ref="entityManagerFactory"/>


    <!-- 事务管理器配置, Jpa单数据源事务 -->
    <bean id="transactionManager" class="org.springframework.orm.jpa.JpaTransactionManager">
        <property name="entityManagerFactory" ref="entityManagerFactory"/>
    </bean>

    <!-- 另一个事务管理器, Jdbc单数据源事务 -->
    <!--<bean id="quartzTransactionManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">-->
        <!--<property name="dataSource" ref="quartzDataSource" />-->
    <!--</bean>-->

    <!-- 使用annotation定义事务 -->
    <tx:annotation-driven transaction-manager="transactionManager" proxy-target-class="true" />

    <!-- 定义aspectj -->
    <aop:aspectj-autoproxy proxy-target-class="true"/>

    <!-- hibernate validator -->
    <bean id="validator" class="org.springframework.validation.beanvalidation.LocalValidatorFactoryBean"/>

    <!-- production环境 -->
    <!-- 生产环境，用于上线正式使用-->
    <beans profile="production">
        <context:property-placeholder ignore-resource-not-found="true" ignore-unresolvable="true"
                                      location="classpath:spring-configuration/application.production.properties"/>

        <!-- 数据源配置,使用应用内的DBCP数据库连接池 -->
        <bean id="dataSource" class="org.apache.commons.dbcp.BasicDataSource" destroy-method="close">
            <!-- Connection Info -->
            <property name="driverClassName" value="${jdbc.driver}" />
            <property name="url" value="${jdbc.url}" />
            <property name="username" value="${jdbc.username}" />
            <property name="password" value="${jdbc.password}" />
            <property name="defaultAutoCommit" value="false" />
        </bean>

        <!-- quartz使用的数据源配置 -->
        <bean id="quartzDataSource" class="org.springframework.jdbc.datasource.SimpleDriverDataSource">
            <property name="driverClass" value="${quartz.jdbc.driver}" />
            <property name="url" value="${quartz.jdbc.url}" />
            <property name="username" value="${quartz.jdbc.username}" />
            <property name="password" value="${quartz.jdbc.password}" />
        </bean>
    </beans>

    <!-- local development环境 -->
    <!-- 增加一个开发测试环境，以方便测试，防止生产环境的数据污染-->
    <beans profile="development">
        <context:property-placeholder ignore-resource-not-found="true" ignore-unresolvable="true"
                                      location="classpath:spring-configuration/application.develoment.properties" />

        <!-- DBCP连接池 -->
        <bean id="dataSource" class="org.apache.commons.dbcp.BasicDataSource" destroy-method="close">
            <property name="driverClassName" value="${jdbc.driver}" />
            <property name="url" value="${jdbc.url}" />
            <property name="username" value="${jdbc.username}" />
            <property name="password" value="${jdbc.password}" />
            <property name="defaultAutoCommit" value="false" />
        </bean>

        <!-- quartz使用的数据源配置 -->
        <!--<bean id="quartzDataSource" class="org.springframework.jdbc.datasource.SimpleDriverDataSource">-->
            <!--<property name="driverClass" value="${quartz.jdbc.driver}" />-->
            <!--<property name="url" value="${quartz.jdbc.url}" />-->
            <!--<property name="username" value="${quartz.jdbc.username}" />-->
            <!--<property name="password" value="${quartz.jdbc.password}" />-->
        <!--</bean>-->
    </beans>

    <!-- unit test环境 -->
    <!-- 采用嵌入式数据库，方便单页测试 -->
    <beans profile="test">
        <context:property-placeholder ignore-resource-not-found="true" ignore-unresolvable="true"
                                      location="classpath:spring-configuration/application.test.properties" />

        <!-- 嵌入式内存中数据库 -->

        <jdbc:embedded-database id="dataSource" type="H2">
        </jdbc:embedded-database>

        <jdbc:embedded-database id="quartzDataSource" type="H2">
            <jdbc:script location="classpath*:spring-configuration/sql/h2/quartz.sql" />
        </jdbc:embedded-database>
    </beans>


</beans>